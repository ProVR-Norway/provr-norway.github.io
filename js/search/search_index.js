var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AccountModule.html",[0,1.433,1,1.433]],["body/modules/AccountModule.html",[0,1.527,1,2.847,2,1.527,3,1.868,4,1.156,5,3.547,6,2.366,7,2.089,8,1.868,9,2.736,10,2.736,11,2.736,12,1.651,13,0.036,14,1.651,15,1.809,16,1.651,17,3.2,18,3.153,19,1.868,20,1.868,21,0.367,22,0.419,23,0.269,24,3.299,25,2.784,26,1.054,27,2.784,28,0.532,29,3.647,30,1.868,31,4.397,32,2.736,33,2.736,34,2.736,35,2.736,36,2.736,37,2.736,38,2.089,39,3.299,40,2.366,41,1.266,42,1.266,43,2.736,44,0.419,45,0.223,46,0.019,47,0.025,48,0.019]],["title/modules/AccountRoutingModule.html",[0,1.433,17,1.753]],["body/modules/AccountRoutingModule.html",[2,1.787,8,2.186,12,1.423,13,0.036,14,1.423,16,1.423,17,2.757,21,0.429,22,0.491,23,0.315,25,2.445,26,1.039,27,3.084,28,0.623,35,3.202,36,3.202,37,3.202,44,0.491,45,0.261,46,0.022,47,0.027,48,0.022,49,3.861,50,2.445,51,3.02,52,4.039,53,1.482,54,1.353,55,3.825,56,0.96,57,3.861,58,2.445,59,2.445,60,3.861]],["title/injectables/AccountService.html",[61,1.085,62,0.825]],["body/injectables/AccountService.html",[13,0.036,21,0.289,22,0.33,23,0.212,26,0.972,28,0.419,42,1.828,44,0.33,45,0.176,46,0.015,47,0.021,48,0.015,53,0.997,54,0.91,58,2.36,59,2.36,61,1.306,62,0.993,63,1.645,64,2.155,65,0.419,66,1.193,67,3.414,68,2.28,69,1.767,70,4.358,71,1.089,72,3.414,73,2.673,74,4.358,75,1.089,76,1.645,77,2.678,78,3.615,79,3.949,80,1.078,81,3.727,82,1.058,83,0.961,84,0.768,85,1.058,86,3.727,87,2.598,88,2.696,89,1.274,90,2.598,91,1.094,92,3.727,93,2.598,94,2.468,95,3.615,96,2.598,97,2.598,98,2.598,99,1.471,100,1.202,101,2.155,102,1.326,103,1.471,104,1.863,105,1.471,106,1.645,107,1.645,108,2.598,109,1.326,110,2.598,111,1.863,112,2.598,113,1.524,114,2.598,115,2.598,116,2.598,117,3.727,118,2.673,119,2.598,120,2.598,121,2.598,122,2.598,123,3.091,124,3.091,125,2.598,126,1.645,127,2.598,128,2.155,129,2.598,130,2.598,131,2.598,132,2.598,133,1.863,134,2.155,135,2.598,136,2.598,137,2.598,138,2.598,139,2.155,140,2.598]],["title/classes/Alert.html",[45,0.209,141,1.753]],["body/classes/Alert.html",[13,0.035,21,0.517,22,0.457,23,0.293,44,0.591,45,0.243,46,0.02,47,0.026,48,0.02,65,0.58,66,1.489,75,1.05,80,1.175,82,0.872,83,0.792,84,0.982,85,0.872,141,2.634,142,2.035,143,2.577,144,5.157,145,4.278,146,3.698,147,3.698,148,3.698,149,3.594,150,4.651,151,4.651,152,4.651,153,2.981,154,3.277,155,3.594,156,2.296,157,3.594,158,3.594,159,3.594,160,3.266,161,3.594,162,3.594,163,3.594,164,3.594,165,2.276,166,1.513,167,2.577]],["title/components/AlertComponent.html",[56,0.557,168,0.991]],["body/components/AlertComponent.html",[4,0.632,12,0.527,13,0.036,14,0.527,15,0.578,16,0.527,20,1.981,21,0.315,22,0.229,23,0.147,26,0.775,28,0.291,40,1.294,41,0.693,42,0.693,44,0.229,45,0.122,46,0.01,47,0.016,48,0.01,53,0.693,54,0.993,56,0.629,65,0.291,66,0.907,69,0.632,71,0.828,75,0.527,76,1.143,77,2.333,80,1.04,82,0.849,83,1.091,84,0.737,85,0.849,89,1.158,91,1.473,100,0.835,105,1.022,109,0.921,113,1.268,133,2.509,141,3.469,142,1.022,145,3.287,146,2.509,147,2.032,160,1.143,165,1.143,166,0.76,167,1.294,168,1.268,169,1.193,170,0.835,171,0.835,172,0.835,173,1.497,174,1.311,175,2.509,176,3.498,177,0.835,178,2.356,179,1.311,180,2.833,181,2.894,182,3.498,183,3.498,184,2.833,185,3.963,186,2.842,187,2.833,188,2.35,189,2.212,190,2.833,191,1.993,192,1.619,193,1.473,194,1.804,195,1.804,196,2.833,197,1.804,198,1.804,199,1.804,200,2.833,201,1.804,202,1.804,203,4.306,204,1.804,205,2.901,206,2.833,207,0.693,208,1.143,209,1.143,210,1.804,211,1.804,212,1.804,213,1.804,214,2.35,215,1.804,216,1.804,217,1.804,218,1.497,219,1.497,220,2.35,221,3.498,222,3.498,223,2.833,224,1.804,225,1.804,226,1.497,227,1.497,228,1.804,229,1.804,230,2.35,231,2.833,232,1.294,233,1.804,234,2.833,235,1.804,236,1.804,237,1.804,238,1.804,239,1.804,240,1.804,241,1.497,242,1.804,243,1.804,244,1.804,245,1.497,246,1.804,247,1.804,248,1.804,249,1.804,250,1.497,251,1.804,252,1.804,253,1.804,254,1.804,255,1.804,256,2.509,257,1.804,258,1.804,259,1.804,260,1.804,261,1.804,262,1.497,263,1.804,264,1.804,265,1.497,266,1.497,267,1.804,268,1.497,269,1.497,270,1.804,271,1.804,272,1.804,273,1.804,274,1.804,275,1.311,276,1.311,277,0.835,278,1.834,279,0.835,280,0.835,281,0.578,282,0.835,283,0.835,284,0.527,285,0.835,286,0.835,287,0.835]],["title/injectables/AlertService.html",[61,1.085,189,1.433]],["body/injectables/AlertService.html",[13,0.036,21,0.449,22,0.289,23,0.185,26,0.804,28,0.367,44,0.289,45,0.154,46,0.013,47,0.019,48,0.013,61,1.184,63,1.438,65,0.367,66,1.081,69,1.754,71,1.179,80,1.086,82,1.258,83,1.142,84,0.894,85,1.258,89,1.515,91,2.107,94,2.53,100,1.051,102,1.159,105,1.286,106,1.438,107,1.438,109,1.725,113,0.727,141,3.312,146,3.203,148,3.819,153,3.705,156,2.42,160,1.438,165,2.139,166,1.422,181,2.139,189,1.563,191,2.316,192,2.067,214,3.346,218,1.884,256,1.629,265,1.884,266,1.884,268,1.884,269,1.884,288,1.884,289,4.034,290,4.151,291,3.378,292,3.378,293,3.378,294,2.271,295,3.378,296,2.271,297,4.775,298,3.378,299,5.89,300,2.271,301,3.378,302,2.271,303,3.378,304,2.271,305,3.378,306,2.271,307,3.378,308,2.271,309,2.271,310,2.271,311,2.271,312,2.271,313,2.271,314,2.271,315,1.629,316,4.467,317,2.271,318,1.884,319,3.378,320,2.271,321,2.271]],["title/components/AppComponent.html",[56,0.557,281,0.991]],["body/components/AppComponent.html",[4,1.084,12,0.904,13,0.036,14,0.904,15,0.99,16,0.904,21,0.344,22,0.393,23,0.252,26,0.861,28,0.499,41,1.188,42,1.188,44,0.393,45,0.209,46,0.017,47,0.024,48,0.017,56,0.861,62,1.478,65,0.499,66,1.348,68,2.129,71,1.231,72,3.977,75,0.904,80,0.955,82,0.751,83,1.223,84,0.68,85,0.751,89,0.904,91,1.303,111,2.219,168,0.99,169,1.773,170,1.432,171,1.432,172,1.432,177,1.432,178,2.71,179,1.949,208,1.959,256,2.219,275,1.949,276,1.949,277,1.432,278,2.378,279,1.432,280,1.432,281,1.645,282,1.432,283,1.432,284,0.904,285,1.432,286,1.432,287,1.432,322,2.567,323,3.02,324,4.211,325,1.959,326,4.211,327,3.094,328,3.094,329,3.094,330,3.094,331,2.567,332,3.493,333,2.567,334,3.493,335,3.493,336,3.02]],["title/modules/AppModule.html",[0,1.433,337,1.961]],["body/modules/AppModule.html",[0,1.263,2,1.263,3,1.545,4,0.956,5,3.211,6,3.211,7,2.836,8,1.545,13,0.036,18,2.768,19,1.545,20,1.545,21,0.303,22,0.347,23,0.315,25,2.444,26,1.061,27,2.444,28,0.44,29,3.201,30,1.545,34,2.263,38,1.728,43,2.263,44,0.347,45,0.184,46,0.015,47,0.022,48,0.015,62,1.421,99,1.545,168,1.707,193,1.625,207,1.481,281,1.887,284,1.558,323,1.957,337,3.91,338,2.263,339,2.263,340,2.263,341,2.263,342,2.263,343,3.02,344,3.02,345,3.02,346,2.722,347,2.728,348,3.859,349,2.263,350,1.957,351,3.859,352,4.478,353,2.263,354,2.728,355,2.836,356,1.728,357,3.859,358,1.957,359,3.859,360,3.859,361,3.859]],["title/modules/AppRoutingModule.html",[0,1.433,343,1.753]],["body/modules/AppRoutingModule.html",[1,2.227,2,1.754,8,2.146,13,0.036,21,0.422,22,0.482,23,0.309,25,2.4,26,1.001,27,3.048,28,0.612,33,3.144,44,0.482,45,0.256,46,0.021,47,0.027,48,0.021,50,2.4,51,2.995,52,3.992,53,1.455,54,1.687,55,3.793,56,0.682,284,1.406,343,2.725,353,3.144,355,2.4,362,2.718,363,3.048,364,3.144,365,3.144,366,3.144,367,3.79,368,3.144,369,2.718,370,3.144,371,3.79,372,3.79]],["title/guards/AuthGuard.html",[363,1.961,373,2.221]],["body/guards/AuthGuard.html",[13,0.036,21,0.375,22,0.428,23,0.275,26,0.899,28,0.544,44,0.428,45,0.228,46,0.019,47,0.025,48,0.019,53,1.294,54,1.181,58,2.134,61,1.563,62,1.546,65,0.544,68,1.712,69,1.563,71,1.303,75,1.303,76,2.134,77,2.902,80,0.89,82,1.082,83,0.983,84,0.72,85,1.082,89,0.985,106,2.134,107,2.134,113,1.703,126,2.134,128,2.796,139,2.796,154,1.909,174,1.56,193,1.877,207,1.294,363,2.824,366,4.413,369,2.417,374,3.37,375,2.796,376,3.37,377,4.46,378,5.32,379,4.999,380,5.32,381,3.37,382,2.417,383,2.134,384,3.37,385,2.134,386,3.37,387,2.796,388,3.37,389,1.721]],["title/interceptors/BasicInterceptor.html",[344,1.753,390,2.221]],["body/interceptors/BasicInterceptor.html",[13,0.036,21,0.355,22,0.405,23,0.26,26,0.977,28,0.515,44,0.405,45,0.216,46,0.018,47,0.024,48,0.018,54,1.823,55,2.287,61,1.506,62,1.492,65,0.515,68,1.866,71,1.256,75,0.932,80,0.858,82,1.043,83,0.948,84,0.694,85,1.043,89,0.932,94,2.753,99,1.806,100,1.476,103,1.806,104,2.287,113,1.021,118,2.287,126,2.02,174,1.476,207,1.224,208,2.02,227,2.645,325,2.02,344,2.434,383,2.02,385,2.02,391,2.645,392,2.645,393,3.565,394,3.189,395,3.565,396,4.316,397,4.033,398,4.316,399,3.189,400,3.487,401,2.645,402,3.565,403,3.189,404,3.189,405,4.298,406,2.645,407,3.189,408,4.298,409,4.298,410,4.298,411,3.189,412,4.298,413,3.189,414,3.189,415,3.189,416,3.189,417,3.189]],["title/interceptors/ErrorInterceptor.html",[345,1.753,390,2.221]],["body/interceptors/ErrorInterceptor.html",[13,0.036,21,0.378,22,0.432,23,0.277,26,0.998,28,0.548,44,0.432,45,0.23,46,0.019,47,0.025,48,0.019,54,1.191,61,1.571,62,1.519,65,0.548,71,1.31,72,2.437,75,0.993,80,0.895,82,1.088,83,0.988,84,0.724,85,1.088,89,0.993,94,2.842,99,1.924,100,1.572,102,1.735,113,1.435,166,1.43,174,1.572,207,1.304,208,2.152,230,2.818,325,2.152,331,2.818,345,2.539,391,2.818,393,3.719,395,3.719,396,4.427,397,4.163,398,4.427,400,2.437,401,2.818,402,3.719,406,2.818,418,2.818,419,3.398,420,3.398,421,3.398,422,3.398,423,3.398,424,3.398,425,4.484,426,2.818,427,3.398,428,3.398,429,3.398,430,3.398]],["title/components/LayoutComponent.html",[12,0.905,56,0.557]],["body/components/LayoutComponent.html",[4,1.172,12,1.55,13,0.036,14,0.977,15,1.07,16,0.977,21,0.372,22,0.425,23,0.273,26,0.896,28,0.539,41,1.283,42,1.283,44,0.425,45,0.226,46,0.019,47,0.025,48,0.019,53,1.283,56,0.896,62,1.543,69,1.555,75,1.296,76,2.117,77,2.896,80,0.667,82,0.811,83,1.25,84,0.539,85,0.811,126,2.117,168,1.07,169,1.867,170,1.547,171,1.547,172,1.547,177,1.547,178,2.678,179,2.053,207,1.283,250,2.773,275,2.053,276,2.053,277,1.547,278,2.454,279,1.547,280,1.547,281,1.07,282,1.547,283,1.547,284,0.977,285,1.547,286,1.547,287,1.547,369,2.398,370,2.773,383,2.117,431,2.773,432,4.436,433,3.343,434,3.343]],["title/components/LoginComponent.html",[14,0.905,56,0.557]],["body/components/LoginComponent.html",[4,0.756,12,0.63,13,0.036,14,1.272,15,0.69,16,0.63,19,1.222,21,0.24,22,0.274,23,0.176,26,0.883,28,0.348,30,1.222,41,0.828,42,1.884,44,0.274,45,0.146,46,0.012,47,0.018,48,0.012,53,0.828,54,0.756,56,0.704,58,2.757,59,2.058,62,1.358,65,0.348,66,1.04,69,1.637,71,0.95,73,2.331,75,0.95,77,2.601,80,1.046,82,0.789,83,1.082,84,0.631,85,0.524,88,2.645,89,0.95,91,1.368,102,1.101,113,1.252,156,1.368,166,0.908,168,0.69,169,1.368,170,0.998,171,0.998,172,0.998,174,1.504,175,2.805,177,0.998,178,2.358,179,1.504,181,1.366,186,3.122,189,2.358,191,1.81,192,1.504,193,1.368,207,0.828,209,1.366,232,3.122,275,1.504,276,1.504,277,0.998,278,2.015,279,0.998,280,0.998,281,0.69,282,0.998,283,0.998,284,0.63,285,0.998,286,0.998,287,0.998,315,1.547,382,3.122,385,1.366,387,3.244,389,2.385,435,1.789,436,3.25,437,3.874,438,3.244,439,3.244,440,3.611,441,3.244,442,1.789,443,4.072,444,3.611,445,3.25,446,2.157,447,2.157,448,3.244,449,2.157,450,2.157,451,2.157,452,1.789,453,2.157,454,1.789,455,1.789,456,2.331,457,1.789,458,1.547,459,1.789,460,1.789,461,1.789,462,2.696,463,2.157,464,2.157,465,1.789,466,1.789,467,1.547,468,1.789,469,1.789,470,1.789,471,1.789,472,1.547,473,1.789,474,1.366,475,1.789,476,1.789,477,2.696,478,2.157,479,2.696,480,2.157,481,1.789,482,1.366,483,2.157,484,1.789]],["title/components/PasswordStrengthBarComponent.html",[15,0.991,56,0.557]],["body/components/PasswordStrengthBarComponent.html",[4,0.614,12,0.512,13,0.036,14,0.512,15,1.248,16,0.512,21,0.195,22,0.223,23,0.143,26,0.315,28,0.283,40,1.256,41,2.223,42,2.136,44,0.223,45,0.118,46,0.01,47,0.016,48,0.01,56,0.617,65,0.283,66,0.886,69,1.877,71,0.809,80,1.051,82,0.833,83,1.08,84,0.864,85,0.833,89,1.003,91,1.444,109,0.894,113,0.56,134,1.453,154,1.567,156,2.317,168,0.56,169,1.165,170,0.81,171,0.81,172,0.81,174,1.28,177,0.81,178,2.333,179,1.28,188,2.295,191,1.28,192,1.28,193,1.641,205,2.846,275,1.28,276,1.28,277,0.81,278,1.964,279,0.81,280,0.81,281,0.56,282,0.81,283,0.81,284,0.512,285,0.81,286,0.81,287,0.81,389,0.894,485,1.751,486,4.443,487,1.453,488,3.43,489,2.767,490,2.767,491,3.43,492,2.767,493,3.43,494,3.43,495,3.43,496,3.43,497,3.43,498,2.767,499,2.767,500,2.767,501,3.521,502,3.43,503,2.767,504,3.43,505,1.751,506,1.751,507,2.767,508,1.751,509,2.767,510,1.751,511,2.767,512,4.512,513,1.751,514,4.245,515,2.767,516,2.295,517,1.751,518,1.751,519,2.767,520,1.751,521,1.751,522,1.751,523,1.751,524,1.751,525,2.767,526,2.767,527,2.767,528,1.751,529,1.751,530,2.767,531,2.767,532,1.751,533,1.751,534,2.295,535,2.767,536,3.43,537,1.751,538,1.751,539,1.751,540,1.751,541,2.767,542,1.751,543,1.751,544,1.751,545,1.751,546,1.453,547,2.767,548,1.453,549,2.767,550,1.751,551,2.295,552,2.295,553,2.295,554,2.295,555,1.751,556,2.767,557,2.767,558,2.767,559,3.898,560,1.751,561,2.767,562,1.751,563,2.295,564,1.751,565,1.751,566,1.751,567,1.751,568,1.751,569,1.453,570,1.751,571,1.751,572,1.751,573,1.751,574,2.767,575,1.751,576,2.767,577,1.751,578,1.751,579,2.767,580,2.767,581,1.751,582,1.751,583,1.751,584,1.751,585,1.751,586,1.751,587,1.751,588,1.751,589,1.453,590,1.751,591,1.751,592,1.751,593,1.751,594,1.751]],["title/components/RegisterComponent.html",[16,0.905,56,0.557]],["body/components/RegisterComponent.html",[4,0.638,12,0.532,13,0.036,14,0.532,15,0.583,16,1.164,19,1.031,21,0.202,22,0.231,23,0.148,26,0.825,28,0.294,30,1.031,41,1.35,42,2.004,44,0.231,45,0.123,46,0.01,47,0.016,48,0.01,53,0.699,54,0.638,56,0.633,59,2.522,62,1.278,65,0.294,66,0.913,67,3.661,69,1.515,71,0.834,73,2.046,75,0.834,77,2.448,80,1.042,82,0.692,83,1.057,84,0.698,85,0.692,88,2.449,89,1.028,91,1.481,102,0.929,113,0.913,147,1.305,154,2.255,156,1.201,166,0.766,168,0.583,169,1.201,170,0.842,171,0.842,172,0.842,174,1.32,175,2.523,177,0.842,178,2.219,179,1.32,181,1.153,186,2.856,189,2.219,191,1.843,192,1.843,193,1.82,207,0.699,209,1.153,232,3.29,275,1.32,276,1.32,277,0.842,278,1.843,279,0.842,280,0.842,281,0.583,282,0.842,283,0.842,284,0.532,285,0.842,286,0.842,287,0.842,315,1.305,382,2.523,389,2.208,437,3.587,438,2.918,439,2.918,440,3.303,441,2.918,442,1.51,443,3.805,444,3.303,448,2.918,452,1.51,454,1.51,455,1.51,456,2.046,457,1.51,458,1.305,459,1.51,460,1.51,461,1.51,462,2.918,465,1.51,466,1.51,467,1.305,468,1.51,469,1.51,470,1.51,471,1.51,472,1.305,473,1.51,474,1.153,475,1.51,476,1.51,477,2.366,479,2.366,481,1.51,482,1.153,484,1.51,501,2.918,546,2.366,548,2.366,551,2.366,552,2.366,553,3.303,554,2.366,595,1.51,596,2.853,597,3.518,598,2.853,599,2.853,600,1.82,601,1.82,602,2.853,603,1.82,604,2.853,605,1.82,606,1.82,607,1.82,608,1.82,609,1.82,610,1.82,611,2.853,612,1.82,613,1.82,614,1.82,615,1.82,616,1.82,617,1.82,618,1.51,619,1.82,620,1.82,621,1.82,622,3.982,623,3.982,624,2.853,625,2.853,626,2.853,627,2.853,628,2.853,629,2.853,630,2.366]],["title/classes/SignedURL.html",[45,0.209,631,1.961]],["body/classes/SignedURL.html",[13,0.034,21,0.488,22,0.558,23,0.358,44,0.558,45,0.297,46,0.025,47,0.03,48,0.025,65,0.709,66,1.687,80,1.052,84,0.851,142,2.487,156,2.466,631,3.794,632,3.642,633,5.648,634,4.391,635,4.391]],["title/injectables/SignedURLService.html",[61,1.085,346,1.581]],["body/injectables/SignedURLService.html",[13,0.036,21,0.393,22,0.449,23,0.288,26,1.036,28,0.57,44,0.449,45,0.239,46,0.02,47,0.026,48,0.02,61,1.612,63,2.237,65,0.57,69,1.238,71,1.344,75,1.344,78,3.815,79,4.494,80,0.918,82,1.116,83,1.014,84,0.57,85,1.116,88,2.605,89,1.032,94,2,95,2.93,99,2,100,1.635,101,2.93,102,1.803,103,2,104,2.533,105,2,106,2.237,107,2.237,113,1.472,346,2.348,482,2.237,631,2.237,636,2.93,637,4.6,638,3.533,639,3.533,640,4.6,641,5.115,642,3.533,643,3.533,644,3.533,645,3.533,646,3.533,647,3.533,648,3.533]],["title/components/UploadComponent.html",[56,0.557,284,0.905]],["body/components/UploadComponent.html",[4,0.517,7,1.527,12,0.431,13,0.036,14,0.431,15,0.472,16,0.431,21,0.164,22,0.188,23,0.359,26,0.635,28,0.238,38,1.527,41,0.566,42,0.566,44,0.188,45,0.263,46,0.008,47,0.014,48,0.008,54,0.517,56,0.55,62,1.226,65,0.238,66,0.772,67,2.996,68,1.603,69,1.071,71,0.705,75,0.705,80,0.88,82,0.585,83,1.105,84,0.742,85,0.585,89,0.431,91,0.621,105,0.836,109,0.753,111,1.058,113,0.772,133,3.298,148,2.532,154,0.836,156,0.621,166,1.287,168,0.472,169,1.015,170,0.683,171,0.683,172,0.683,177,0.683,178,2.202,179,1.116,189,2.04,191,1.801,192,1.415,193,1.638,207,0.566,209,0.934,220,1.224,245,2,275,1.634,276,1.116,277,0.683,278,1.634,279,0.683,280,0.683,281,0.472,282,0.683,283,0.683,284,1.032,285,1.415,286,0.683,287,0.683,318,1.224,325,0.934,332,2,346,2.429,355,3.174,356,2.236,358,1.058,383,0.934,385,0.934,389,1.561,426,2,467,1.058,472,2.193,474,1.527,482,0.934,589,2.929,618,1.224,630,2.929,649,1.224,650,2.411,651,2.411,652,3.057,653,2.411,654,2.411,655,2.411,656,1.476,657,1.476,658,2.411,659,1.476,660,1.476,661,3.057,662,1.476,663,1.476,664,1.476,665,1.476,666,1.476,667,1.224,668,1.476,669,1.476,670,1.476,671,1.476,672,1.476,673,1.476,674,3.531,675,2.411,676,1.476,677,2.411,678,1.476,679,1.476,680,2.411,681,1.476,682,1.476,683,1.476,684,2.411,685,1.476,686,1.476,687,1.476,688,1.476,689,2.411,690,1.224,691,1.224,692,2.411,693,1.476,694,1.476,695,1.476,696,1.476,697,2.536,698,1.476,699,1.476,700,1.476,701,2.411,702,2.411,703,1.476,704,1.476,705,1.476,706,1.476,707,4.408,708,3.057,709,1.476,710,1.476,711,1.476,712,1.476,713,1.476,714,1.476,715,2.411,716,1.476,717,2.411,718,1.476,719,1.476,720,1.476,721,1.476,722,1.476,723,1.476,724,1.476,725,1.476,726,1.476,727,1.476,728,1.476,729,4.894,730,4.177,731,3.531,732,3.531,733,3.531,734,3.531,735,4.598,736,3.531,737,3.531,738,3.531,739,3.531,740,3.531,741,3.531,742,3.531,743,2.411,744,2.411,745,2.411,746,2.411,747,2,748,2.411,749,2.411,750,2.411,751,2.411,752,3.531,753,2.411,754,2.411,755,2.411,756,2.411,757,1.476,758,2.411,759,1.476]],["title/classes/User.html",[45,0.209,68,1.188]],["body/classes/User.html",[13,0.034,21,0.488,22,0.558,23,0.358,44,0.558,45,0.297,46,0.025,47,0.03,48,0.025,65,0.709,66,1.687,68,2.023,80,1.052,84,0.851,88,3.198,118,4.05,142,2.487,156,2.466,760,3.642,761,4.391,762,4.391]],["title/coverage.html",[763,3.495]],["body/coverage.html",[1,1.48,12,0.934,13,0.035,14,0.934,15,1.023,16,0.934,23,0.261,41,1.227,45,0.329,46,0.018,47,0.024,48,0.018,50,2.025,56,1.03,61,1.706,62,0.852,64,2.652,68,1.227,84,0.516,103,2.438,109,1.632,141,1.811,143,2.293,168,1.023,173,2.652,189,1.48,281,1.023,284,0.934,288,2.652,322,2.652,344,1.811,345,1.811,346,1.632,362,2.293,363,2.025,373,2.293,375,2.652,390,3.088,392,2.652,418,2.652,431,2.652,435,2.652,486,2.652,487,2.652,534,5.204,595,2.652,631,2.025,632,2.652,636,2.652,649,2.652,667,4.51,760,2.652,763,2.652,764,2.652,765,3.197,766,3.197,767,3.197,768,3.197,769,5.6,770,4.868,771,3.197,772,4.306,773,3.197,774,5.437,775,3.197,776,2.652,777,2.652,778,3.572,779,2.652,780,2.652,781,3.197,782,3.197]],["title/dependencies.html",[3,2.107,783,2.592]],["body/dependencies.html",[3,2.323,13,0.036,23,0.334,28,0.662,30,2.323,32,3.403,46,0.023,47,0.028,48,0.023,53,1.575,100,1.898,349,4.195,350,3.627,355,2.598,358,2.942,456,2.942,458,2.942,784,4.102,785,6.126,786,4.102,787,4.102,788,4.102,789,4.102,790,4.102,791,4.102,792,4.102,793,4.102,794,4.102,795,4.102,796,4.102,797,4.102,798,4.102]],["title/miscellaneous/enumerations.html",[799,1.641,800,3.086]],["body/miscellaneous/enumerations.html",[13,0.031,21,0.527,46,0.027,47,0.031,48,0.027,65,0.765,143,3.401,160,3.493,165,3.003,166,1.996,167,3.401,799,3.003,800,3.933,801,4.742]],["title/index.html",[65,0.418,802,2.15,803,2.15]],["body/index.html",[13,0.033,23,0.29,38,3.442,46,0.02,47,0.026,48,0.02,68,1.368,83,0.785,123,2.955,124,3.837,226,2.955,323,2.555,336,2.555,356,2.256,400,3.317,474,2.256,690,4.789,691,2.955,697,2.955,747,2.955,804,3.563,805,2.955,806,3.563,807,3.563,808,3.563,809,3.563,810,3.563,811,5.436,812,5.136,813,5.136,814,4.625,815,3.563,816,4.625,817,3.563,818,3.563,819,4.625,820,3.563,821,2.955,822,3.563,823,3.563,824,3.563,825,3.563,826,3.563,827,3.563,828,3.563,829,3.563,830,2.955,831,3.563,832,3.563,833,3.563,834,3.563,835,3.563,836,3.563,837,3.563,838,3.563,839,4.625,840,3.563,841,3.563,842,3.563,843,3.563,844,3.563,845,3.563,846,3.563,847,3.563,848,3.563,849,3.563,850,3.563,851,3.563,852,3.563,853,3.563,854,3.563,855,3.563,856,3.563,857,3.563,858,3.563,859,3.563]],["title/license.html",[802,2.15,803,2.15,860,2.15]],["body/license.html",[13,0.026,20,2.047,46,0.02,47,0.026,48,0.02,219,4.29,241,2.998,290,2.998,333,3.873,334,4.29,335,2.998,336,2.592,356,2.289,368,2.998,569,2.998,764,2.998,805,3.873,830,3.873,860,2.998,861,3.615,862,3.615,863,4.669,864,3.615,865,3.615,866,3.615,867,3.615,868,3.615,869,3.615,870,6.038,871,3.615,872,3.615,873,3.615,874,4.669,875,3.615,876,3.615,877,3.615,878,3.615,879,3.615,880,3.615,881,3.615,882,3.615,883,3.615,884,4.669,885,3.615,886,3.615,887,3.615,888,3.615,889,3.615,890,3.615,891,4.669,892,3.615,893,3.615,894,3.615,895,3.615,896,3.615,897,3.615,898,3.615,899,3.615,900,3.615,901,3.615,902,3.615,903,3.615,904,3.615,905,3.615,906,3.615,907,3.615,908,3.615,909,3.615,910,3.615,911,3.615,912,3.615,913,3.615,914,3.615,915,3.615,916,3.615,917,3.615,918,3.615,919,3.615]],["title/modules.html",[2,1.95]],["body/modules.html",[1,2.13,2,2.13,13,0.03,17,2.606,46,0.026,47,0.03,48,0.026,337,2.914,343,2.606,350,3.887,821,4.495,920,5.42,921,5.42,922,5.948,923,5.42]],["title/overview.html",[924,3.495]],["body/overview.html",[0,1.551,1,2.823,2,1.551,3,1.898,4,1.175,5,2.404,6,2.404,7,2.123,8,1.898,9,2.781,10,2.781,11,2.781,12,1.457,13,0.035,14,1.457,15,1.596,16,1.457,17,2.823,18,3.187,19,1.898,20,1.898,46,0.019,47,0.025,48,0.019,51,1.898,62,1.329,63,2.123,142,1.898,168,1.596,169,1.411,262,2.781,281,1.854,284,1.457,337,3.972,338,2.781,339,2.781,340,2.781,341,2.781,342,2.781,343,2.823,344,2.823,345,2.823,346,2.545,373,2.404,563,2.781,924,2.781,925,3.352,926,4.985]],["title/routes.html",[51,2.386]],["body/routes.html",[13,0.032,46,0.028,47,0.032,48,0.028,51,2.791]],["title/miscellaneous/variables.html",[799,1.641,927,3.086]],["body/miscellaneous/variables.html",[1,2.249,13,0.035,46,0.022,47,0.027,48,0.022,50,3.078,65,0.621,84,0.903,103,3.168,191,2.589,192,2.589,193,2.046,362,2.76,364,3.193,365,3.193,389,1.965,516,3.193,776,3.193,777,3.193,778,3.193,779,4.031,780,4.031,799,2.437,927,3.193,928,3.849,929,4.86,930,3.849,931,3.849,932,3.849,933,3.849,934,4.86,935,4.86,936,4.86,937,4.86,938,4.86,939,4.86,940,4.86]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":534,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["0f0",{"_index":527,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["1",{"_index":563,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"overview.html":{}}}],["1.10.0",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":745,"title":{},"body":{"components/UploadComponent.html":{}}}],["184",{"_index":738,"title":{},"body":{"components/UploadComponent.html":{}}}],["2",{"_index":560,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["200",{"_index":725,"title":{},"body":{"components/UploadComponent.html":{}}}],["2021",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["250",{"_index":259,"title":{},"body":{"components/AlertComponent.html":{}}}],["3",{"_index":926,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":236,"title":{},"body":{"components/AlertComponent.html":{}}}],["3px",{"_index":732,"title":{},"body":{"components/UploadComponent.html":{}}}],["4",{"_index":262,"title":{},"body":{"components/AlertComponent.html":{},"overview.html":{}}}],["4.7.0",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":425,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["42",{"_index":737,"title":{},"body":{"components/UploadComponent.html":{}}}],["4200",{"_index":810,"title":{},"body":{"index.html":{}}}],["6",{"_index":561,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["6.5.4",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":925,"title":{},"body":{"overview.html":{}}}],["8",{"_index":552,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["9.1.1",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["_components",{"_index":43,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["_helpers",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["_models",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["_n",{"_index":574,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["_services",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["above",{"_index":890,"title":{},"body":{"license.html":{}}}],["access",{"_index":467,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["accessors",{"_index":73,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":33,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppRoutingModule.html":{}}}],["accountmodule",{"_index":1,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountroutingmodule",{"_index":17,"title":{"modules/AccountRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["accountservice",{"_index":62,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":914,"title":{},"body":{"license.html":{}}}],["action=write",{"_index":647,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["actions",{"_index":754,"title":{},"body":{"components/UploadComponent.html":{}}}],["activatedroute",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["activatedroutesnapshot",{"_index":378,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual",{"_index":846,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":287,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["add",{"_index":227,"title":{},"body":{"components/AlertComponent.html":{},"interceptors/BasicInterceptor.html":{}}}],["address",{"_index":623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["advance",{"_index":845,"title":{},"body":{"index.html":{}}}],["alert",{"_index":141,"title":{"classes/Alert.html":{}},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":280,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["alert(alert",{"_index":293,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert).fade",{"_index":257,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.autoclose",{"_index":233,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":180,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.fade",{"_index":271,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.id",{"_index":319,"title":{},"body":{"injectables/AlertService.html":{}}}],["alert.message",{"_index":217,"title":{},"body":{"components/AlertComponent.html":{}}}],["alertcomponent",{"_index":168,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alerts",{"_index":181,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alertservice",{"_index":189,"title":{"injectables/AlertService.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["alertsubscription",{"_index":182,"title":{},"body":{"components/AlertComponent.html":{}}}],["alerttype",{"_index":160,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"miscellaneous/enumerations.html":{}}}],["alerttype.error",{"_index":266,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["alerttype.info",{"_index":268,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["alerttype.success",{"_index":265,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["alerttype.warning",{"_index":269,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["alerttypeclass",{"_index":264,"title":{},"body":{"components/AlertComponent.html":{}}}],["align:2px",{"_index":584,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["allow",{"_index":694,"title":{},"body":{"components/UploadComponent.html":{}}}],["already",{"_index":250,"title":{},"body":{"components/AlertComponent.html":{},"components/LayoutComponent.html":{}}}],["and/or",{"_index":882,"title":{},"body":{"license.html":{}}}],["angular",{"_index":817,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":32,"title":{},"body":{"modules/AccountModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":99,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/SignedURLService.html":{}}}],["angular/compiler",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":30,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":53,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AlertComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["api",{"_index":406,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["apiurl",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["app'},{'name",{"_index":282,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["app.component",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["app.yaml",{"_index":837,"title":{},"body":{"index.html":{}}}],["app/_models",{"_index":105,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["app/_services",{"_index":207,"title":{},"body":{"components/AlertComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["appcomponent",{"_index":281,"title":{"components/AppComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":807,"title":{},"body":{"index.html":{}}}],["applied",{"_index":739,"title":{},"body":{"components/UploadComponent.html":{}}}],["appmodule",{"_index":337,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":343,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":917,"title":{},"body":{"license.html":{}}}],["array",{"_index":228,"title":{},"body":{"components/AlertComponent.html":{}}}],["associated",{"_index":871,"title":{},"body":{"license.html":{}}}],["asynchronous",{"_index":533,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["atleast",{"_index":551,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["auth",{"_index":403,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["authguard",{"_index":363,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorised",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authorization",{"_index":416,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["authors",{"_index":907,"title":{},"body":{"license.html":{}}}],["auto",{"_index":230,"title":{},"body":{"components/AlertComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["autoclose",{"_index":144,"title":{},"body":{"classes/Alert.html":{}}}],["automatically",{"_index":823,"title":{},"body":{"index.html":{}}}],["available",{"_index":821,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":245,"title":{},"body":{"components/AlertComponent.html":{},"components/UploadComponent.html":{}}}],["awesome",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["background:#ddd",{"_index":588,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar",{"_index":489,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar'},{'name",{"_index":283,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["bar.component.css",{"_index":491,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.html",{"_index":492,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts",{"_index":487,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:10",{"_index":506,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:11",{"_index":505,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:12",{"_index":508,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:14",{"_index":529,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:16",{"_index":522,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:17",{"_index":523,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:18",{"_index":524,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:20",{"_index":528,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:23",{"_index":510,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:48",{"_index":517,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar.component.ts:57",{"_index":520,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar0",{"_index":493,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar1",{"_index":494,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["bar2",{"_index":495,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["barlabel",{"_index":501,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["basic",{"_index":405,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["basicinterceptor",{"_index":344,"title":{"interceptors/BasicInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/BasicInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["behaviorsubject",{"_index":95,"title":{},"body":{"injectables/AccountService.html":{},"injectables/SignedURLService.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('user",{"_index":110,"title":{},"body":{"injectables/AccountService.html":{}}}],["between",{"_index":127,"title":{},"body":{"injectables/AccountService.html":{}}}],["binary",{"_index":705,"title":{},"body":{"components/UploadComponent.html":{}}}],["block",{"_index":591,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["body",{"_index":743,"title":{},"body":{"components/UploadComponent.html":{}}}],["boolean",{"_index":154,"title":{},"body":{"classes/Alert.html":{},"guards/AuthGuard.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["boolean):void",{"_index":610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":589,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/UploadComponent.html":{}}}],["both",{"_index":625,"title":{},"body":{"components/RegisterComponent.html":{}}}],["branch",{"_index":829,"title":{},"body":{"index.html":{}}}],["browse",{"_index":922,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":840,"title":{},"body":{"index.html":{}}}],["bucket",{"_index":814,"title":{},"body":{"index.html":{}}}],["build",{"_index":831,"title":{},"body":{"index.html":{}}}],["button",{"_index":669,"title":{},"body":{"components/UploadComponent.html":{}}}],["buttons",{"_index":680,"title":{},"body":{"components/UploadComponent.html":{}}}],["c",{"_index":569,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"license.html":{}}}],["c.col",{"_index":572,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["cad",{"_index":747,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["cadmodels",{"_index":407,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["canactivate",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":377,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":630,"title":{},"body":{"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["case",{"_index":626,"title":{},"body":{"components/RegisterComponent.html":{}}}],["catcherror",{"_index":422,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["change",{"_index":238,"title":{},"body":{"components/AlertComponent.html":{}}}],["changes",{"_index":518,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["changes['passwordtocheck'].currentvalue",{"_index":566,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["characters",{"_index":553,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["charge",{"_index":867,"title":{},"body":{"license.html":{}}}],["check",{"_index":40,"title":{},"body":{"modules/AccountModule.html":{},"components/AlertComponent.html":{},"components/PasswordStrengthBarComponent.html":{}}}],["checks",{"_index":539,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["children",{"_index":57,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["ci/cd",{"_index":834,"title":{},"body":{"index.html":{}}}],["claim",{"_index":910,"title":{},"body":{"license.html":{}}}],["class",{"_index":45,"title":{"classes/Alert.html":{},"classes/SignedURL.html":{},"classes/User.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":142,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"classes/SignedURL.html":{},"classes/User.html":{},"overview.html":{}}}],["classes.join",{"_index":273,"title":{},"body":{"components/AlertComponent.html":{}}}],["classes.push('fade",{"_index":272,"title":{},"body":{"components/AlertComponent.html":{}}}],["classes.push(alerttypeclass[alert.type",{"_index":270,"title":{},"body":{"components/AlertComponent.html":{}}}],["clear",{"_index":214,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["clear(id",{"_index":295,"title":{},"body":{"injectables/AlertService.html":{}}}],["clicked",{"_index":687,"title":{},"body":{"components/UploadComponent.html":{}}}],["close",{"_index":231,"title":{},"body":{"components/AlertComponent.html":{}}}],["cloud",{"_index":813,"title":{},"body":{"index.html":{}}}],["cloudbuild.yaml",{"_index":838,"title":{},"body":{"index.html":{}}}],["cluster_accountmodule",{"_index":9,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_declarations",{"_index":10,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":11,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["col",{"_index":514,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["color",{"_index":742,"title":{},"body":{"components/UploadComponent.html":{}}}],["colors",{"_index":496,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["comminicate",{"_index":841,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":31,"title":{},"body":{"modules/AccountModule.html":{}}}],["component",{"_index":56,"title":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}},"body":{"modules/AccountRoutingModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":279,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["components",{"_index":169,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"overview.html":{}}}],["conditions",{"_index":889,"title":{},"body":{"license.html":{}}}],["config",{"_index":853,"title":{},"body":{"index.html":{}}}],["config.json",{"_index":859,"title":{},"body":{"index.html":{}}}],["configure",{"_index":839,"title":{},"body":{"index.html":{}}}],["configured",{"_index":850,"title":{},"body":{"index.html":{}}}],["connection",{"_index":918,"title":{},"body":{"license.html":{}}}],["const",{"_index":54,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AlertComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["constructor",{"_index":75,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["constructor(accountservice",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/UploadComponent.html":{}}}],["constructor(formbuilder",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":638,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["constructor(init",{"_index":149,"title":{},"body":{"classes/Alert.html":{}}}],["constructor(init?:partial",{"_index":162,"title":{},"body":{"classes/Alert.html":{}}}],["constructor(private",{"_index":208,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["constructor(router",{"_index":76,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"guards/AuthGuard.html":{},"components/LayoutComponent.html":{}}}],["contain",{"_index":624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["container",{"_index":263,"title":{},"body":{"components/AlertComponent.html":{}}}],["content",{"_index":702,"title":{},"body":{"components/UploadComponent.html":{}}}],["context",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":915,"title":{},"body":{"license.html":{}}}],["control",{"_index":693,"title":{},"body":{"components/UploadComponent.html":{}}}],["convenience",{"_index":315,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["copies",{"_index":884,"title":{},"body":{"license.html":{}}}],["copy",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["copyright",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["cors",{"_index":690,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["count",{"_index":521,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["coverage",{"_index":763,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credentials",{"_index":692,"title":{},"body":{"components/UploadComponent.html":{}}}],["cssclass",{"_index":184,"title":{},"body":{"components/AlertComponent.html":{}}}],["cssclass(alert",{"_index":196,"title":{},"body":{"components/AlertComponent.html":{}}}],["current",{"_index":135,"title":{},"body":{"injectables/AccountService.html":{}}}],["d/.test(pass",{"_index":543,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["damages",{"_index":911,"title":{},"body":{"license.html":{}}}],["danger",{"_index":267,"title":{},"body":{"components/AlertComponent.html":{}}}],["data",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["data.signedurl",{"_index":700,"title":{},"body":{"components/UploadComponent.html":{}}}],["ddd",{"_index":568,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["deal",{"_index":872,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":919,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":191,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultid",{"_index":289,"title":{},"body":{"injectables/AlertService.html":{}}}],["defined",{"_index":80,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{}}}],["delete",{"_index":226,"title":{},"body":{"components/AlertComponent.html":{},"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployed",{"_index":819,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":816,"title":{},"body":{"index.html":{}}}],["details",{"_index":121,"title":{},"body":{"injectables/AccountService.html":{}}}],["development",{"_index":806,"title":{},"body":{"index.html":{}}}],["different",{"_index":538,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["digits",{"_index":542,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["directive",{"_index":277,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["directives",{"_index":286,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["dismissable",{"_index":260,"title":{},"body":{"components/AlertComponent.html":{}}}],["display",{"_index":710,"title":{},"body":{"components/UploadComponent.html":{}}}],["display:inline",{"_index":576,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["distribute",{"_index":880,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":764,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":171,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["dotted",{"_index":731,"title":{},"body":{"components/UploadComponent.html":{}}}],["drop",{"_index":729,"title":{},"body":{"components/UploadComponent.html":{}}}],["dynamic",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":658,"title":{},"body":{"components/UploadComponent.html":{}}}],["each",{"_index":824,"title":{},"body":{"index.html":{}}}],["early",{"_index":688,"title":{},"body":{"components/UploadComponent.html":{}}}],["easy",{"_index":466,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":276,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["email",{"_index":622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailaddress",{"_index":612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["empty",{"_index":215,"title":{},"body":{"components/AlertComponent.html":{}}}],["enable",{"_index":311,"title":{},"body":{"injectables/AlertService.html":{}}}],["encodeuri(modelname",{"_index":646,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["encodeuri(username",{"_index":644,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["engine",{"_index":820,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":39,"title":{},"body":{"modules/AccountModule.html":{}}}],["enum",{"_index":164,"title":{},"body":{"classes/Alert.html":{}}}],["enumerations",{"_index":800,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":103,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/BasicInterceptor.html":{},"injectables/SignedURLService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":104,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/BasicInterceptor.html":{},"injectables/SignedURLService.html":{}}}],["err.error.message",{"_index":428,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":424,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":429,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":166,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error(message",{"_index":298,"title":{},"body":{"injectables/AlertService.html":{}}}],["errorinterceptor",{"_index":345,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["etc",{"_index":848,"title":{},"body":{"index.html":{}}}],["event",{"_index":241,"title":{},"body":{"components/AlertComponent.html":{},"license.html":{}}}],["eventemitter",{"_index":507,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["eventemitter(true",{"_index":532,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["expirationtime",{"_index":633,"title":{},"body":{"classes/SignedURL.html":{}}}],["explicitly",{"_index":851,"title":{},"body":{"index.html":{}}}],["export",{"_index":44,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":898,"title":{},"body":{"license.html":{}}}],["external",{"_index":842,"title":{},"body":{"index.html":{}}}],["ez.a.run.app",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["f00",{"_index":525,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["f90",{"_index":526,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["fade",{"_index":145,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{}}}],["faded",{"_index":258,"title":{},"body":{"components/AlertComponent.html":{}}}],["failed",{"_index":721,"title":{},"body":{"components/UploadComponent.html":{}}}],["false",{"_index":389,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["fields",{"_index":468,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["fileitem",{"_index":674,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileitem.file.name",{"_index":676,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileitem.headers",{"_index":701,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileitem.remove",{"_index":709,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileitem.url",{"_index":699,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileitem.withcredentials",{"_index":695,"title":{},"body":{"components/UploadComponent.html":{}}}],["filename",{"_index":675,"title":{},"body":{"components/UploadComponent.html":{}}}],["filename.includes('.glb",{"_index":678,"title":{},"body":{"components/UploadComponent.html":{}}}],["filename.includes('.gltf",{"_index":677,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileoverbase",{"_index":654,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileoverbase(e",{"_index":656,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileoverbase(e:any):void",{"_index":728,"title":{},"body":{"components/UploadComponent.html":{}}}],["files",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"components/UploadComponent.html":{},"index.html":{},"license.html":{}}}],["fileuploader",{"_index":661,"title":{},"body":{"components/UploadComponent.html":{}}}],["fileuploadmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["filter",{"_index":218,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["first",{"_index":455,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fitness",{"_index":903,"title":{},"body":{"license.html":{}}}],["flag",{"_index":220,"title":{},"body":{"components/AlertComponent.html":{},"components/UploadComponent.html":{}}}],["following",{"_index":888,"title":{},"body":{"license.html":{}}}],["font",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["found",{"_index":856,"title":{},"body":{"index.html":{}}}],["free",{"_index":866,"title":{},"body":{"license.html":{}}}],["fulfills",{"_index":549,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["furnished",{"_index":887,"title":{},"body":{"license.html":{}}}],["gateway",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gcp",{"_index":836,"title":{},"body":{"index.html":{}}}],["gcs",{"_index":854,"title":{},"body":{"index.html":{}}}],["generate",{"_index":696,"title":{},"body":{"components/UploadComponent.html":{}}}],["generating",{"_index":683,"title":{},"body":{"components/UploadComponent.html":{}}}],["getcolor",{"_index":498,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["getcolor(pass",{"_index":509,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["getf",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getsignedurl",{"_index":637,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["getsignedurl(username",{"_index":640,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["getter",{"_index":465,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getting",{"_index":802,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuservalue",{"_index":97,"title":{},"body":{"injectables/AccountService.html":{}}}],["glb",{"_index":714,"title":{},"body":{"components/UploadComponent.html":{}}}],["gltf",{"_index":713,"title":{},"body":{"components/UploadComponent.html":{}}}],["google",{"_index":812,"title":{},"body":{"index.html":{}}}],["granted",{"_index":865,"title":{},"body":{"license.html":{}}}],["graph",{"_index":923,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":373,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hasbasedropzoneover",{"_index":651,"title":{},"body":{"components/UploadComponent.html":{}}}],["hasbasedropzoneover:boolean",{"_index":665,"title":{},"body":{"components/UploadComponent.html":{}}}],["hashedpassword",{"_index":477,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hashing",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["header",{"_index":404,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["height",{"_index":744,"title":{},"body":{"components/UploadComponent.html":{}}}],["height:10px",{"_index":592,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["here",{"_index":474,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"index.html":{}}}],["hereby",{"_index":864,"title":{},"body":{"license.html":{}}}],["hi",{"_index":746,"title":{},"body":{"components/UploadComponent.html":{}}}],["hidden",{"_index":681,"title":{},"body":{"components/UploadComponent.html":{}}}],["hide/show",{"_index":668,"title":{},"body":{"components/UploadComponent.html":{}}}],["holders",{"_index":908,"title":{},"body":{"license.html":{}}}],["home",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LayoutComponent.html":{}}}],["html",{"_index":275,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["http",{"_index":78,"title":{},"body":{"injectables/AccountService.html":{},"injectables/SignedURLService.html":{}}}],["http_interceptors",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":79,"title":{},"body":{"injectables/AccountService.html":{},"injectables/SignedURLService.html":{}}}],["httpclientmodule",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":401,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":398,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":402,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":396,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["https://api",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":146,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{}}}],["identifier",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":512,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["implements",{"_index":174,"title":{},"body":{"components/AlertComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["implied",{"_index":899,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["import('./account/account.module').then(x",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["important",{"_index":586,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["imports",{"_index":25,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":892,"title":{},"body":{"license.html":{}}}],["including",{"_index":874,"title":{},"body":{"license.html":{}}}],["index",{"_index":65,"title":{"index.html":{}},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":301,"title":{},"body":{"injectables/AlertService.html":{}}}],["init",{"_index":152,"title":{},"body":{"classes/Alert.html":{}}}],["injectable",{"_index":61,"title":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"injectables/SignedURLService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/SignedURLService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"injectables/SignedURLService.html":{},"overview.html":{}}}],["input",{"_index":205,"title":{},"body":{"components/AlertComponent.html":{},"components/PasswordStrengthBarComponent.html":{}}}],["inputs",{"_index":188,"title":{},"body":{"components/AlertComponent.html":{},"components/PasswordStrengthBarComponent.html":{}}}],["instanceof",{"_index":242,"title":{},"body":{"components/AlertComponent.html":{}}}],["intercept",{"_index":393,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":395,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":390,"title":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":391,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["invalid",{"_index":475,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isapiurl",{"_index":410,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["isbuttonvisible",{"_index":652,"title":{},"body":{"components/UploadComponent.html":{}}}],["iscadmodelendpoint",{"_index":412,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["isloggedin",{"_index":408,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["isnotstrong",{"_index":604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isnotstrongenough",{"_index":497,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["item",{"_index":706,"title":{},"body":{"components/UploadComponent.html":{}}}],["item?.file?.name",{"_index":755,"title":{},"body":{"components/UploadComponent.html":{}}}],["item?.file?.size/1024/1024",{"_index":756,"title":{},"body":{"components/UploadComponent.html":{}}}],["iu3tuzfidq",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":855,"title":{},"body":{"index.html":{}}}],["json.stringify(userdetails",{"_index":131,"title":{},"body":{"injectables/AccountService.html":{}}}],["jwt",{"_index":122,"title":{},"body":{"injectables/AccountService.html":{}}}],["keep",{"_index":125,"title":{},"body":{"injectables/AccountService.html":{}}}],["keepafterroutechange",{"_index":147,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"components/RegisterComponent.html":{}}}],["kind",{"_index":897,"title":{},"body":{"license.html":{}}}],["layout.component",{"_index":35,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["layout.component.html",{"_index":432,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layoutcomponent",{"_index":12,"title":{"components/LayoutComponent.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leaks",{"_index":247,"title":{},"body":{"components/AlertComponent.html":{}}}],["left:15px",{"_index":581,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AccountModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"overview.html":{}}}],["length",{"_index":749,"title":{},"body":{"components/UploadComponent.html":{}}}],["letters",{"_index":627,"title":{},"body":{"components/RegisterComponent.html":{}}}],["liability",{"_index":912,"title":{},"body":{"license.html":{}}}],["liable",{"_index":909,"title":{},"body":{"license.html":{}}}],["license",{"_index":860,"title":{"license.html":{}},"body":{"license.html":{}}}],["lightgray",{"_index":733,"title":{},"body":{"components/UploadComponent.html":{}}}],["limitation",{"_index":875,"title":{},"body":{"license.html":{}}}],["limited",{"_index":900,"title":{},"body":{"license.html":{}}}],["list",{"_index":577,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["listen",{"_index":808,"title":{},"body":{"index.html":{}}}],["literal",{"_index":516,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["local",{"_index":123,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{}}}],["localstorage.removeitem('user",{"_index":137,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstorage.setitem('user",{"_index":130,"title":{},"body":{"injectables/AccountService.html":{}}}],["location",{"_index":237,"title":{},"body":{"components/AlertComponent.html":{}}}],["logged",{"_index":126,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"components/LayoutComponent.html":{}}}],["login",{"_index":58,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["login(username",{"_index":86,"title":{},"body":{"injectables/AccountService.html":{}}}],["login.component",{"_index":36,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["login.component.html",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":14,"title":{"components/LoginComponent.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":72,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["long",{"_index":554,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["lower",{"_index":546,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["made",{"_index":827,"title":{},"body":{"index.html":{}}}],["main",{"_index":317,"title":{},"body":{"injectables/AlertService.html":{}}}],["make",{"_index":832,"title":{},"body":{"index.html":{}}}],["map",{"_index":101,"title":{},"body":{"injectables/AccountService.html":{},"injectables/SignedURLService.html":{}}}],["margin",{"_index":580,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["margin:0",{"_index":579,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["master",{"_index":828,"title":{},"body":{"index.html":{}}}],["matching",{"_index":47,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mb",{"_index":758,"title":{},"body":{"components/UploadComponent.html":{}}}],["md5",{"_index":456,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["md5.hashstr(this.f.password.value",{"_index":478,"title":{},"body":{"components/LoginComponent.html":{}}}],["md5.hashstr(this.form.value.password",{"_index":614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["md5/dist/md5",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["memory",{"_index":246,"title":{},"body":{"components/AlertComponent.html":{}}}],["merchantability",{"_index":902,"title":{},"body":{"license.html":{}}}],["merge",{"_index":878,"title":{},"body":{"license.html":{}}}],["message",{"_index":148,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertService.html":{},"components/UploadComponent.html":{}}}],["metadata",{"_index":177,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["method",{"_index":318,"title":{},"body":{"injectables/AlertService.html":{},"components/UploadComponent.html":{}}}],["methods",{"_index":71,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["miscellaneous",{"_index":799,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":861,"title":{},"body":{"license.html":{}}}],["model/gltf",{"_index":704,"title":{},"body":{"components/UploadComponent.html":{}}}],["model/gltf+json",{"_index":703,"title":{},"body":{"components/UploadComponent.html":{}}}],["modelfile",{"_index":645,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["modelname",{"_index":641,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["models",{"_index":697,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["moderate",{"_index":562,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["modify",{"_index":877,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mt",{"_index":261,"title":{},"body":{"components/AlertComponent.html":{}}}],["multi",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"index.html":{}}}],["navigationstart",{"_index":206,"title":{},"body":{"components/AlertComponent.html":{}}}],["need",{"_index":540,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["needs",{"_index":849,"title":{},"body":{"index.html":{}}}],["new",{"_index":109,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/PasswordStrengthBarComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["next",{"_index":397,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request",{"_index":417,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":423,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng2",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"components/UploadComponent.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":27,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":499,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["ngonchanges(changes",{"_index":515,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["ngondestroy",{"_index":185,"title":{},"body":{"components/AlertComponent.html":{}}}],["ngoninit",{"_index":186,"title":{},"body":{"components/AlertComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["noninfringement",{"_index":906,"title":{},"body":{"license.html":{}}}],["norway",{"_index":862,"title":{},"body":{"license.html":{}}}],["notice",{"_index":805,"title":{},"body":{"index.html":{},"license.html":{}}}],["notifications",{"_index":210,"title":{},"body":{"components/AlertComponent.html":{}}}],["null",{"_index":136,"title":{},"body":{"injectables/AccountService.html":{}}}],["number",{"_index":513,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["number:'.2",{"_index":757,"title":{},"body":{"components/UploadComponent.html":{}}}],["number:\\'.2",{"_index":759,"title":{},"body":{"components/UploadComponent.html":{}}}],["numbers",{"_index":628,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nv",{"_index":734,"title":{},"body":{"components/UploadComponent.html":{}}}],["object",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":163,"title":{},"body":{"classes/Alert.html":{}}}],["observable",{"_index":94,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/SignedURLService.html":{}}}],["obtaining",{"_index":869,"title":{},"body":{"license.html":{}}}],["onalert",{"_index":291,"title":{},"body":{"injectables/AlertService.html":{}}}],["onalert(id",{"_index":303,"title":{},"body":{"injectables/AlertService.html":{}}}],["onchanges",{"_index":488,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["ondestroy",{"_index":176,"title":{},"body":{"components/AlertComponent.html":{}}}],["oninit",{"_index":175,"title":{},"body":{"components/AlertComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onsubmit",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["optional",{"_index":85,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["options",{"_index":299,"title":{},"body":{"injectables/AlertService.html":{}}}],["otherwise",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{},"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AccountModule.html":{},"components/AlertComponent.html":{},"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":530,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["outputs",{"_index":503,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["over",{"_index":735,"title":{},"body":{"components/UploadComponent.html":{}}}],["overview",{"_index":924,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":783,"title":{"dependencies.html":{}},"body":{}}],["padding:0",{"_index":582,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["page",{"_index":128,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["partial",{"_index":150,"title":{},"body":{"classes/Alert.html":{}}}],["particular",{"_index":904,"title":{},"body":{"license.html":{}}}],["pass",{"_index":511,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["pass.length",{"_index":537,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["passisnotstrong",{"_index":597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passlength",{"_index":536,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["password",{"_index":42,"title":{},"body":{"modules/AccountModule.html":{},"injectables/AccountService.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["passwordstrength",{"_index":504,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["passwordstrengthbarcomponent",{"_index":15,"title":{"components/PasswordStrengthBarComponent.html":{}},"body":{"modules/AccountModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwordtocheck",{"_index":502,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["path",{"_index":55,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/BasicInterceptor.html":{}}}],["permission",{"_index":863,"title":{},"body":{"license.html":{}}}],["permit",{"_index":885,"title":{},"body":{"license.html":{}}}],["person",{"_index":868,"title":{},"body":{"license.html":{}}}],["persons",{"_index":886,"title":{},"body":{"license.html":{}}}],["pipe(first",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["pipe(map(data",{"_index":648,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["pipe(map(response",{"_index":116,"title":{},"body":{"injectables/AccountService.html":{}}}],["point",{"_index":587,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["point:last",{"_index":585,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["policy",{"_index":811,"title":{},"body":{"index.html":{}}}],["port",{"_index":809,"title":{},"body":{"index.html":{}}}],["portions",{"_index":894,"title":{},"body":{"license.html":{}}}],["possible",{"_index":833,"title":{},"body":{"index.html":{}}}],["post",{"_index":847,"title":{},"body":{"index.html":{}}}],["preflight",{"_index":691,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["prevent",{"_index":252,"title":{},"body":{"components/AlertComponent.html":{}}}],["previous",{"_index":717,"title":{},"body":{"components/UploadComponent.html":{}}}],["private",{"_index":69,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["production",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":752,"title":{},"body":{"components/UploadComponent.html":{}}}],["properties",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"components/UploadComponent.html":{},"classes/User.html":{}}}],["propname",{"_index":565,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["provide",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":895,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":106,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/SignedURLService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/UploadComponent.html":{},"overview.html":{}}}],["provr",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"license.html":{}}}],["provrwebsite",{"_index":804,"title":{},"body":{"index.html":{}}}],["public",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["publish",{"_index":879,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":905,"title":{},"body":{"license.html":{}}}],["push",{"_index":826,"title":{},"body":{"index.html":{}}}],["put",{"_index":672,"title":{},"body":{"components/UploadComponent.html":{}}}],["queryparams",{"_index":386,"title":{},"body":{"guards/AuthGuard.html":{}}}],["queue",{"_index":707,"title":{},"body":{"components/UploadComponent.html":{}}}],["radius:2px",{"_index":590,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["reactiveformsmodule",{"_index":29,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["received",{"_index":216,"title":{},"body":{"components/AlertComponent.html":{}}}],["redirect",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LayoutComponent.html":{}}}],["redirectto",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refreshes",{"_index":129,"title":{},"body":{"injectables/AccountService.html":{}}}],["register",{"_index":59,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register(user",{"_index":92,"title":{},"body":{"injectables/AccountService.html":{}}}],["register.component",{"_index":37,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["register.component.html",{"_index":596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":16,"title":{"components/RegisterComponent.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["relativeto",{"_index":620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["remove",{"_index":133,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"components/UploadComponent.html":{}}}],["removealert",{"_index":187,"title":{},"body":{"components/AlertComponent.html":{}}}],["removealert(alert",{"_index":200,"title":{},"body":{"components/AlertComponent.html":{}}}],["removed",{"_index":251,"title":{},"body":{"components/AlertComponent.html":{}}}],["repository",{"_index":857,"title":{},"body":{"index.html":{}}}],["request",{"_index":400,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":414,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["request.url.includes('/cadmodels",{"_index":413,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["request.url.startswith(environment.apiurl",{"_index":411,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["require",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":232,"title":{},"body":{"components/AlertComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":723,"title":{},"body":{"components/UploadComponent.html":{}}}],["res.status",{"_index":724,"title":{},"body":{"components/UploadComponent.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["response",{"_index":426,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/UploadComponent.html":{}}}],["response.token",{"_index":119,"title":{},"body":{"injectables/AccountService.html":{}}}],["response:string",{"_index":666,"title":{},"body":{"components/UploadComponent.html":{}}}],["rest",{"_index":224,"title":{},"body":{"components/AlertComponent.html":{}}}],["restriction",{"_index":873,"title":{},"body":{"license.html":{}}}],["result",{"_index":46,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":113,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["returned",{"_index":427,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":89,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{}}}],["returnurl",{"_index":387,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["rgb(45",{"_index":736,"title":{},"body":{"components/UploadComponent.html":{}}}],["right:4px",{"_index":593,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["rights",{"_index":876,"title":{},"body":{"license.html":{}}}],["root",{"_index":107,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/SignedURLService.html":{}}}],["route",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["router",{"_index":77,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"guards/AuthGuard.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":52,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":60,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":380,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":51,"title":{"routes.html":{}},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routesubscription",{"_index":183,"title":{},"body":{"components/AlertComponent.html":{}}}],["routing.module",{"_index":34,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":50,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":100,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/SignedURLService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":102,"title":{},"body":{"injectables/AccountService.html":{},"injectables/AlertService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{}}}],["screen",{"_index":711,"title":{},"body":{"components/UploadComponent.html":{}}}],["select",{"_index":748,"title":{},"body":{"components/UploadComponent.html":{}}}],["selector",{"_index":178,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["sell",{"_index":883,"title":{},"body":{"license.html":{}}}],["send",{"_index":844,"title":{},"body":{"index.html":{}}}],["servers",{"_index":843,"title":{},"body":{"index.html":{}}}],["service",{"_index":835,"title":{},"body":{"index.html":{}}}],["set",{"_index":134,"title":{},"body":{"injectables/AccountService.html":{},"components/PasswordStrengthBarComponent.html":{}}}],["setbarcolors",{"_index":500,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["setbarcolors(count",{"_index":519,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["setheaders",{"_index":415,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["setpassstrength",{"_index":598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["setpassstrength(isnotstrong",{"_index":602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["settimeout",{"_index":234,"title":{},"body":{"components/AlertComponent.html":{}}}],["shall",{"_index":891,"title":{},"body":{"license.html":{}}}],["signed",{"_index":684,"title":{},"body":{"components/UploadComponent.html":{}}}],["signedurl",{"_index":631,"title":{"classes/SignedURL.html":{}},"body":{"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"coverage.html":{}}}],["signedurlservice",{"_index":346,"title":{"injectables/SignedURLService.html":{}},"body":{"modules/AppModule.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplechange",{"_index":531,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["size",{"_index":751,"title":{},"body":{"components/UploadComponent.html":{}}}],["software",{"_index":870,"title":{},"body":{"license.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{}}}],["spec\\.ts",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":629,"title":{},"body":{"components/RegisterComponent.html":{}}}],["specialchar",{"_index":544,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["src/.../alert.ts",{"_index":801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_components/alert.component.ts",{"_index":173,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/app/_components/alert.component.ts:10",{"_index":195,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:11",{"_index":194,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:13",{"_index":202,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:14",{"_index":204,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:15",{"_index":190,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:19",{"_index":199,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:50",{"_index":198,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:56",{"_index":201,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/alert.component.ts:74",{"_index":197,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/_components/password",{"_index":486,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"coverage.html":{}}}],["src/app/_helpers/auth.guard.ts",{"_index":375,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/_helpers/auth.guard.ts:13",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_helpers/auth.guard.ts:7",{"_index":376,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_helpers/basic.interceptor.ts",{"_index":392,"title":{},"body":{"interceptors/BasicInterceptor.html":{},"coverage.html":{}}}],["src/app/_helpers/basic.interceptor.ts:12",{"_index":399,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["src/app/_helpers/basic.interceptor.ts:9",{"_index":394,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["src/app/_helpers/error.interceptor.ts",{"_index":418,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_helpers/error.interceptor.ts:12",{"_index":420,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_helpers/error.interceptor.ts:9",{"_index":419,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_models/alert.ts",{"_index":143,"title":{},"body":{"classes/Alert.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/_models/alert.ts:2",{"_index":157,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/_models/alert.ts:3",{"_index":161,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/_models/alert.ts:4",{"_index":159,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/_models/alert.ts:5",{"_index":155,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/_models/alert.ts:6",{"_index":158,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/_models/alert.ts:7",{"_index":151,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/_models/signedurl.ts",{"_index":632,"title":{},"body":{"classes/SignedURL.html":{},"coverage.html":{}}}],["src/app/_models/signedurl.ts:2",{"_index":635,"title":{},"body":{"classes/SignedURL.html":{}}}],["src/app/_models/signedurl.ts:3",{"_index":634,"title":{},"body":{"classes/SignedURL.html":{}}}],["src/app/_models/user.ts",{"_index":760,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/_models/user.ts:2",{"_index":762,"title":{},"body":{"classes/User.html":{}}}],["src/app/_models/user.ts:3",{"_index":761,"title":{},"body":{"classes/User.html":{}}}],["src/app/_services/account.service.ts",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/_services/account.service.ts:12",{"_index":96,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/_services/account.service.ts:13",{"_index":81,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/_services/account.service.ts:23",{"_index":98,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/_services/account.service.ts:27",{"_index":87,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/_services/account.service.ts:41",{"_index":90,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/_services/account.service.ts:48",{"_index":93,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/_services/alert.service.ts",{"_index":288,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/_services/alert.service.ts:10",{"_index":309,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:13",{"_index":304,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:18",{"_index":306,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:22",{"_index":300,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:26",{"_index":302,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:30",{"_index":308,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:35",{"_index":294,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:41",{"_index":296,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/alert.service.ts:9",{"_index":310,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/_services/signedurl.service.ts",{"_index":636,"title":{},"body":{"injectables/SignedURLService.html":{},"coverage.html":{}}}],["src/app/_services/signedurl.service.ts:10",{"_index":639,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["src/app/_services/signedurl.service.ts:16",{"_index":642,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["src/app/account/account",{"_index":49,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["src/app/account/account.module.ts",{"_index":24,"title":{},"body":{"modules/AccountModule.html":{}}}],["src/app/account/layout.component.ts",{"_index":431,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/account/layout.component.ts:7",{"_index":433,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/account/login.component.ts",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/account/login.component.ts:12",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login.component.ts:13",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login.component.ts:14",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login.component.ts:15",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login.component.ts:25",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login.component.ts:36",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/login.component.ts:38",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/account/register.component.ts",{"_index":595,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/account/register.component.ts:12",{"_index":606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:13",{"_index":607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:14",{"_index":608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:16",{"_index":605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:17",{"_index":599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:27",{"_index":603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:31",{"_index":600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:40",{"_index":609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/account/register.component.ts:42",{"_index":601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/app",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:8",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/upload/upload.component.ts",{"_index":649,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["src/app/upload/upload.component.ts:16",{"_index":662,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/upload/upload.component.ts:17",{"_index":659,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/upload/upload.component.ts:18",{"_index":660,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/upload/upload.component.ts:19",{"_index":663,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/upload/upload.component.ts:22",{"_index":655,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/app/upload/upload.component.ts:91",{"_index":657,"title":{},"body":{"components/UploadComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":803,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":379,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url",{"_index":388,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":753,"title":{},"body":{"components/UploadComponent.html":{}}}],["stop",{"_index":473,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["storage",{"_index":124,"title":{},"body":{"injectables/AccountService.html":{},"index.html":{}}}],["store",{"_index":120,"title":{},"body":{"injectables/AccountService.html":{}}}],["strength",{"_index":41,"title":{},"body":{"modules/AccountModule.html":{},"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["string",{"_index":156,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"components/UploadComponent.html":{},"classes/User.html":{}}}],["strong",{"_index":555,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["style:none",{"_index":578,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["styles",{"_index":485,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["styleurls",{"_index":490,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["subject",{"_index":290,"title":{},"body":{"injectables/AlertService.html":{},"license.html":{}}}],["sublicense",{"_index":881,"title":{},"body":{"license.html":{}}}],["submit",{"_index":471,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":209,"title":{},"body":{"components/AlertComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["subscribe(alert",{"_index":213,"title":{},"body":{"components/AlertComponent.html":{}}}],["subscribing",{"_index":312,"title":{},"body":{"injectables/AlertService.html":{}}}],["subscription",{"_index":203,"title":{},"body":{"components/AlertComponent.html":{}}}],["substantial",{"_index":893,"title":{},"body":{"license.html":{}}}],["success",{"_index":165,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"miscellaneous/enumerations.html":{}}}],["success(message",{"_index":305,"title":{},"body":{"injectables/AlertService.html":{}}}],["successful",{"_index":618,"title":{},"body":{"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["successfully",{"_index":727,"title":{},"body":{"components/UploadComponent.html":{}}}],["support",{"_index":920,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":921,"title":{},"body":{"modules.html":{}}}],["table",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":170,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["templateurl",{"_index":179,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["test(pass",{"_index":545,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["text",{"_index":741,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.accountservice.login(this.f.username.value",{"_index":480,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.accountservice.logout",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.accountservice.register(this.form.value",{"_index":616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.accountservice.user.subscribe(x",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["this.accountservice.uservalue",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"components/LayoutComponent.html":{},"components/UploadComponent.html":{}}}],["this.alert(new",{"_index":316,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alerts",{"_index":221,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alerts.filter(x",{"_index":222,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alerts.find(x",{"_index":255,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alerts.foreach(x",{"_index":225,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alerts.includes(alert",{"_index":253,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alerts.push(alert",{"_index":229,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertservice.clear",{"_index":472,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["this.alertservice.clear(this.id",{"_index":243,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertservice.error('only",{"_index":712,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.alertservice.error('upload",{"_index":720,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.alertservice.error(error",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.alertservice.onalert(this.id",{"_index":212,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertservice.success('model(s",{"_index":726,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.alertservice.success('registration",{"_index":617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.alertservice.success('upload",{"_index":718,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.alertsubscription",{"_index":211,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.alertsubscription.unsubscribe",{"_index":248,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.colors[idx",{"_index":564,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["this.defaultid",{"_index":297,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.fade",{"_index":254,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.form",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form.controls",{"_index":469,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form.invalid",{"_index":476,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form.value.password",{"_index":615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formbuilder.group",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getcolor(password",{"_index":570,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["this.hasbasedropzoneover",{"_index":715,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.http.get(`${environment.apiurl}/cadmodels/signedurl",{"_index":643,"title":{},"body":{"injectables/SignedURLService.html":{}}}],["this.http.post(`${environment.apiurl}/auth/login",{"_index":115,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.post(`${environment.apiurl}/auth/register",{"_index":140,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.isbuttonvisible",{"_index":689,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.isnotstrongenough",{"_index":535,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["this.loading",{"_index":479,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.passisnotstrong",{"_index":611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.passwordstrength.emit(this.isnotstrongenough",{"_index":573,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["this.removealert(alert",{"_index":235,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.returnurl",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route",{"_index":621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":240,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.router.navigate",{"_index":434,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.navigate(['../login",{"_index":619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/account/login",{"_index":139,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{}}}],["this.router.navigate([this.returnurl",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.routesubscription",{"_index":239,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.routesubscription.unsubscribe",{"_index":249,"title":{},"body":{"components/AlertComponent.html":{}}}],["this.setbarcolors(5",{"_index":567,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["this.setbarcolors(c.idx",{"_index":571,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["this.signedurlservice.getsignedurl(this.user.username",{"_index":698,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.subject.asobservable().pipe(filter(x",{"_index":313,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.subject.next(alert",{"_index":320,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.subject.next(new",{"_index":321,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.submitted",{"_index":470,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.uploader",{"_index":671,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.onafteraddingfile",{"_index":673,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.onerroritem",{"_index":719,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.onsuccessitem",{"_index":716,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.response.subscribe",{"_index":722,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.user",{"_index":111,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/UploadComponent.html":{}}}],["this.usersubject",{"_index":108,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersubject.asobservable",{"_index":112,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersubject.next(null",{"_index":138,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersubject.next(userdetails",{"_index":132,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.usersubject.value",{"_index":114,"title":{},"body":{"injectables/AccountService.html":{}}}],["throwerror",{"_index":421,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":430,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":825,"title":{},"body":{"index.html":{}}}],["times",{"_index":274,"title":{},"body":{"components/AlertComponent.html":{}}}],["token",{"_index":118,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/BasicInterceptor.html":{},"classes/User.html":{}}}],["tort",{"_index":916,"title":{},"body":{"license.html":{}}}],["tree",{"_index":172,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"components/AlertComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["tslib",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["tutorial",{"_index":852,"title":{},"body":{"index.html":{}}}],["type",{"_index":84,"title":{},"body":{"injectables/AccountService.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"classes/SignedURL.html":{},"injectables/SignedURLService.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ul#strengthbar",{"_index":575,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["under",{"_index":858,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":244,"title":{},"body":{"components/AlertComponent.html":{}}}],["updated",{"_index":815,"title":{},"body":{"index.html":{}}}],["upload",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UploadComponent.html":{},"dependencies.html":{}}}],["upload.component",{"_index":285,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["upload.component.html",{"_index":650,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadall",{"_index":679,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadcomponent",{"_index":284,"title":{"components/UploadComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploaded",{"_index":708,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploader",{"_index":653,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploader:fileuploader",{"_index":664,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploader?.queue?.length",{"_index":750,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploading",{"_index":670,"title":{},"body":{"components/UploadComponent.html":{}}}],["upon",{"_index":682,"title":{},"body":{"components/UploadComponent.html":{}}}],["upper",{"_index":548,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{}}}],["url",{"_index":385,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["urls",{"_index":685,"title":{},"body":{"components/UploadComponent.html":{}}}],["use",{"_index":830,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":38,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/UploadComponent.html":{},"index.html":{}}}],["user",{"_index":68,"title":{"classes/User.html":{}},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/BasicInterceptor.html":{},"components/UploadComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["user.token",{"_index":409,"title":{},"body":{"interceptors/BasicInterceptor.html":{}}}],["user.username",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/UploadComponent.html":{}}}],["userdetails",{"_index":117,"title":{},"body":{"injectables/AccountService.html":{}}}],["username",{"_index":88,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SignedURLService.html":{},"classes/User.html":{}}}],["usersubject",{"_index":70,"title":{},"body":{"injectables/AccountService.html":{}}}],["uservalue",{"_index":74,"title":{},"body":{"injectables/AccountService.html":{}}}],["validators",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":192,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":278,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LayoutComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["variable",{"_index":667,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["variables",{"_index":927,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variation",{"_index":550,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["variations",{"_index":541,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["variations.digits",{"_index":556,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["variations.lower",{"_index":557,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["variations.specialchar",{"_index":559,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["variations.upper",{"_index":558,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["vertical",{"_index":583,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["void",{"_index":91,"title":{},"body":{"injectables/AccountService.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/PasswordStrengthBarComponent.html":{},"components/RegisterComponent.html":{},"components/UploadComponent.html":{}}}],["warn",{"_index":292,"title":{},"body":{"injectables/AlertService.html":{}}}],["warn(message",{"_index":307,"title":{},"body":{"injectables/AlertService.html":{}}}],["warning",{"_index":167,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":901,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":896,"title":{},"body":{"license.html":{}}}],["webiste",{"_index":818,"title":{},"body":{"index.html":{}}}],["website",{"_index":822,"title":{},"body":{"index.html":{}}}],["whenthe",{"_index":686,"title":{},"body":{"components/UploadComponent.html":{}}}],["whether",{"_index":913,"title":{},"body":{"license.html":{}}}],["width:40px",{"_index":594,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["without",{"_index":219,"title":{},"body":{"components/AlertComponent.html":{},"license.html":{}}}],["x",{"_index":256,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{}}}],["x.accountmodule",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["x.id",{"_index":314,"title":{},"body":{"injectables/AlertService.html":{}}}],["x.keepafterroutechange",{"_index":223,"title":{},"body":{"components/AlertComponent.html":{}}}],["yes",{"_index":153,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertService.html":{}}}],["z]/.test(pass",{"_index":547,"title":{},"body":{"components/PasswordStrengthBarComponent.html":{}}}],["zone",{"_index":730,"title":{},"body":{"components/UploadComponent.html":{}}}],["zone.js",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":740,"title":{},"body":{"components/UploadComponent.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nLayoutComponent->AccountModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAccountModule -->\n\nLoginComponent->AccountModule\n\n\n\n\n\nPasswordStrengthBarComponent\n\nPasswordStrengthBarComponent\n\nAccountModule -->\n\nPasswordStrengthBarComponent->AccountModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAccountModule -->\n\nRegisterComponent->AccountModule\n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayoutComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordStrengthBarComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n// Used to ensure check for the strength of a password\nimport { PasswordStrengthBarComponent } from '../_components';  \n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        AccountRoutingModule\n    ],\n    declarations: [\n        LayoutComponent,\n        LoginComponent,\n        RegisterComponent,\n        PasswordStrengthBarComponent\n    ]\n})\nexport class AccountModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountRoutingModule.html":{"url":"modules/AccountRoutingModule.html","title":"module - AccountRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { LoginComponent } from './login.component';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: 'login', component: LoginComponent },\n            { path: 'register', component: RegisterComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Private\n                                userSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/account.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/account.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/account.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/account.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/account.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/account.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userValue\n                    \n                \n\n                \n                    \n                        getuserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/_services/account.service.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject;\n    public user: Observable;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post(`${environment.apiUrl}/auth/login`, { username, password })\n            .pipe(map(response => {\n                const userDetails = {\n                    username: username,\n                    token: response.token\n                };\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(userDetails));\n                this.userSubject.next(userDetails);\n                return userDetails;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`${environment.apiUrl}/auth/register`, user);\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alert.html":{"url":"classes/Alert.html","title":"class - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/alert.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoClose\n                            \n                            \n                                fade\n                            \n                            \n                                id\n                            \n                            \n                                keepAfterRouteChange\n                            \n                            \n                                message\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/_models/alert.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/alert.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/alert.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/alert.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keepAfterRouteChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/alert.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/alert.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AlertType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/alert.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_components/alert.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                alert\n            \n\n\n\n\n            \n                templateUrl\n                alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alerts\n                            \n                            \n                                alertSubscription\n                            \n                            \n                                routeSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cssClass\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeAlert\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fade\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_components/alert.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fade\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/_components/alert.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Default value : 'default-alert'\n                    \n                \n                        \n                            \n                                    Defined in src/app/_components/alert.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cssClass\n                        \n                        \n                    \n                \n            \n            \n                \ncssClass(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/alert.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/alert.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/alert.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAlert\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAlert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/alert.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alerts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alert[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/alert.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/alert.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/alert.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/_models';\nimport { AlertService } from '@app/_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            this.alerts.find(x => x === alert).fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}\n    \n\n    \n        ﻿\n    &times;\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿    ×    '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultId\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                clear\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                onAlert\n                            \n                            \n                                success\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \nalert(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.defaultId\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAlert\n                        \n                        \n                    \n                \n            \n            \n                \nonAlert(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.defaultId\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, options?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/alert.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'default-alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/alert.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/alert.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { AccountService } from './_services';\nimport { User } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.accountService.user.subscribe(x => this.user = x);\n    }\n\n    logout() {\n        this.accountService.logout();\n    }\n}\n    \n\n    \n        ﻿\n\n    \n        \n            {{ user.username }}\n        \n        \n            Logout\n        \n    \n\n\n\n\n    \n    \n\n\n\n\n    &copy; Copyright 2021 ProVR\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                        {{ user.username }}                            Logout                        © Copyright 2021 ProVR'\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nAppModule -->\n\nUploadComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAppModule -->\n\nAccountService->AppModule\n\n\n\n\n\nBasicInterceptor\n\nBasicInterceptor\n\nAppModule -->\n\nBasicInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nSignedURLService\n\nSignedURLService\n\nAppModule -->\n\nSignedURLService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            BasicInterceptor\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            SignedURLService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BasicInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport { UploadComponent } from './upload';\n// Used to upload files \nimport { FileUploadModule } from 'ng2-file-upload';\nimport { AccountService } from '@app/_services';\nimport { SignedURLService } from '@app/_services';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        FileUploadModule\n    ],\n\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        UploadComponent\n    ],\n\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: BasicInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n        AccountService,\n        SignedURLService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { };\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UploadComponent } from './upload';\nimport { AuthGuard } from './_helpers';\n\nconst accountModule = () => import('./account/account.module').then(x => x.AccountModule);\n\nconst routes: Routes = [\n    { path: '', component: UploadComponent, canActivate: [AuthGuard] },\n    { path: 'account', loadChildren: accountModule },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_helpers/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        if (user) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/BasicInterceptor.html":{"url":"interceptors/BasicInterceptor.html","title":"interceptor - BasicInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  BasicInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/basic.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/basic.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/basic.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class BasicInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // add auth header with the basic token if user is logged in and request is to the api url with path '/cadmodels/'\n        const user = this.accountService.userValue;\n        const isLoggedIn = user && user.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        const isCadmodelEndpoint = request.url.includes('/cadmodels/');\n        if (isLoggedIn && isApiUrl && isCadmodelEndpoint) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Basic ${user.token}`\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/error.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/error.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/layout.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/layout.component.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {\n        // redirect to home if already logged in\n        if (this.accountService.userValue) {\n            this.router.navigate(['/']);\n        }\n    }\n}\n    \n\n    \n        ﻿\n    \n    \n      \n        -->\n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿                      -->              '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, accountService: AccountService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/login.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/login.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/account/login.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n// Md5 hashing\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        const hashedPassword = Md5.hashStr(this.f.password.value);\n\n        this.loading = true;\n        this.accountService.login(this.f.username.value, hashedPassword)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n    \n\n    \n        ﻿\n    Login\n    \n        \n            \n                Username\n                \n                \n                    Username is required\n                \n            \n            \n                Password\n                \n                \n                    Password is required\n                \n            \n            \n                \n                    \n                    Login\n                \n                Register\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿    Login                                        Username                                                    Username is required                                                        Password                                                    Password is required                                                                                                Login                                Register                        '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordStrengthBarComponent.html":{"url":"components/PasswordStrengthBarComponent.html","title":"component - PasswordStrengthBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordStrengthBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/_components/password-strength-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                password-strength-bar\n            \n\n            \n                styleUrls\n                password-strength-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                password-strength-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bar0\n                            \n                            \n                                bar1\n                            \n                            \n                                bar2\n                            \n                            \n                                    Private\n                                colors\n                            \n                            \n                                    Private\n                                isNotStrongEnough\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getColor\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                setBarColors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                barLabel\n                            \n                            \n                                passwordToCheck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                passwordStrength\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        barLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordToCheck\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        passwordStrength\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getColor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getColor(pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/password-strength-bar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { idx: number; col: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/password-strength-bar.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setBarColors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBarColors(count, col)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_components/password-strength-bar.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    col\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bar0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bar1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bar2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            colors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['#F00', '#F90', '#0F0']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isNotStrongEnough\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_components/password-strength-bar.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnChanges, EventEmitter, Input, Output, SimpleChange } from '@angular/core';  \n  \n@Component({  \n  selector: 'password-strength-bar',  \n  templateUrl: 'password-strength-bar.component.html',  \n  styleUrls: ['password-strength-bar.component.css']  \n})  \nexport class PasswordStrengthBarComponent implements OnChanges {  \n  \n  @Input() passwordToCheck: string;  \n  @Input() barLabel: string;\n  @Output() passwordStrength = new EventEmitter(true); // Set to 'true' so that it is asynchronous\n  \n  private isNotStrongEnough: boolean = true;\n  \n  bar0: string;  \n  bar1: string;  \n  bar2: string;\n  \n  private colors = ['#F00', '#F90', '#0F0'];  \n\n  \n  private getColor(pass: string) {  \n    let idx = 0;  \n    this.isNotStrongEnough = true;\n    let passLength = pass.length;\n    // Different checks that need to pass on the password check\n    let variations = {  \n      digits: /\\d/.test(pass),  \n      specialChar: /[!@#$%^&*(),.?\":{}|<>]/.test(pass),\n      lower: /[a-z]/.test(pass),  \n      upper: /[A-Z]/.test(pass)\n    }; \n    // If the password fulfills all variation and it is atleast 8 characters long we have a strong password\n    if (variations.digits && variations.lower && variations.upper && variations.specialChar && (passLength >= 8)) {  \n      idx = 2;\n      this.isNotStrongEnough = false;\n    // If the password fulfills some variations and is atleast 6 characters long we have a moderate password\n    } else if ((variations.digits || variations.specialChar) && (variations.lower || variations.specialChar) && (variations.upper || variations.specialChar) && (passLength >= 6)) {  \n      idx = 1;\n    }\n    return {  \n      idx: idx + 1,  \n      col: this.colors[idx]  \n    };  \n  }  \n  \n  ngOnChanges(changes: {[propName: string]: SimpleChange}): void {  \n      var password = changes['passwordToCheck'].currentValue;\n      this.setBarColors(5, '#DDD');  \n      if (password) {\n          let c = this.getColor(password);  \n          this.setBarColors(c.idx, c.col);  \n      }  \n      this.passwordStrength.emit(this.isNotStrongEnough);\n  }  \n  private setBarColors(count, col) {  \n      for (let _n = 0; _n \n    \n\n    \n          \n    {{barLabel}}  \n      \n        \n      \n \n    \n\n    \n                \n                    password-strength-bar.component.css\n                \n                ul#strengthBar {  \n    display:inline;  \n    list-style:none;  \n    margin:0;  \n    margin-left:15px;  \n    padding:0;  \n    vertical-align:2px;  \n}  \n.point:last {  \n    margin:0 !important;  \n}  \n.point {  \n    background:#DDD;  \n    border-radius:2px;  \n    display:inline-block;  \n    height:10px;  \n    margin-right:4px;  \n    width:40px;  \n}  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{barLabel}}                       '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordStrengthBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                barLabel\n                            \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                    Public\n                                passIsNotStrong\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Public\n                                setPassStrength\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, accountService: AccountService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/register.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/register.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/register.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPassStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPassStrength(isNotStrong: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/register.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isNotStrong\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Password strength:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/register.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/register.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/register.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passIsNotStrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/register.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/register.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/account/register.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n// Md5 hashing\nimport { Md5 } from 'ts-md5/dist/md5';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    public barLabel: string = \"Password strength:\";  \n    public passIsNotStrong: boolean = true;  \n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    public setPassStrength(isNotStrong: boolean):void {\n        this.passIsNotStrong = isNotStrong;\n    }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            emailAddress: ['', [Validators.required, Validators.email]],\n            username: ['', [Validators.required]],\n            password: ['', [Validators.required]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid || this.passIsNotStrong) {\n            return;\n        }\n\n        const hashedPassword = Md5.hashStr(this.form.value.password);\n        this.form.value.password = hashedPassword;\n\n        this.loading = true;\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../login'], { relativeTo: this.route });\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n    \n\n    \n        ﻿\n    Register\n    \n        \n            \n                Email Address\n                \n                \n                    Email Address is required\n                \n            \n            \n                Username\n                \n                \n                    Username is required\n                \n            \n            \n                Password\n                \n                \n                \n                \n                    Password is required-->\n                    The password must contain both upper and lower case letters, numbers, special characters like *, @, and ?, and be atleast 8 characters long. \n                \n            \n            \n                \n                    \n                    Register\n                \n                Cancel\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿    Register                                        Email Address                                                    Email Address is required                                                        Username                                                    Username is required                                                        Password                                                                                    Password is required-->                    The password must contain both upper and lower case letters, numbers, special characters like *, @, and ?, and be atleast 8 characters long.                                                                                                 Register                                Cancel                        '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignedURL.html":{"url":"classes/SignedURL.html","title":"class - SignedURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignedURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/signedurl.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expirationTime\n                            \n                            \n                                signedURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expirationTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/signedurl.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signedURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/signedurl.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SignedURL {\n    signedURL: string;\n    expirationTime: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignedURLService.html":{"url":"injectables/SignedURLService.html","title":"injectable - SignedURLService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SignedURLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/signedurl.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSignedURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/signedurl.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSignedURL\n                        \n                        \n                    \n                \n            \n            \n                \ngetSignedURL(username, modelname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/signedurl.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modelname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { SignedURL } from '@app/_models';\n\n@Injectable({ providedIn: 'root'})\nexport class SignedURLService {\n\n    constructor(\n        private http: HttpClient\n    ){}\n\n    getSignedURL(username, modelname) {\n        return this.http.get(`${environment.apiUrl}/cadmodels/signedurl?` + 'username=' + encodeURI(username) + '&modelfile=' + encodeURI(modelname) + '&action=write')\n            .pipe(map(data => {\n                return data;\n            }));\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/upload/upload.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                AccountService\n                                SignedURLService\n                \n            \n\n\n            \n                selector\n                upload.component\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasBaseDropZoneOver\n                            \n                            \n                                    Public\n                                isButtonVisible\n                            \n                            \n                                response\n                            \n                            \n                                uploader\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileOverBase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, signedurlService: SignedURLService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/upload/upload.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signedurlService\n                                                  \n                                                        \n                                                                        SignedURLService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fileOverBase\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fileOverBase(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/upload/upload.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasBaseDropZoneOver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/upload/upload.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isButtonVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/upload/upload.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileUploader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/upload/upload.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/upload/upload.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { User } from '@app/_models';\nimport { AccountService, AlertService, SignedURLService } from '@app/_services';\n\n@Component({\n  selector: 'upload.component',\n  templateUrl: './upload.component.html',\n  providers: [\n    AccountService,\n    SignedURLService\n]\n})\nexport class UploadComponent {\n\n  uploader:FileUploader;\n  hasBaseDropZoneOver:boolean;\n  response:string;\n  user: User;\n\n  // Variable used to hide/show button for uploading files\n  public isButtonVisible = true;\n\n  constructor (\n    private accountService: AccountService, \n    private signedurlService: SignedURLService,\n    private alertService: AlertService\n  ){\n    this.user = this.accountService.userValue;\n    this.uploader = new FileUploader({\n      method: 'PUT',\n    });\n\n    this.uploader.onAfterAddingFile = (fileItem) => { \n      // Remove message\n      this.alertService.clear();\n      const fileName = fileItem.file.name;\n      if (fileName.includes('.gltf') || fileName.includes('.glb')) {\n        // The upload and uploadAll buttons are hidden upon generating signed URLs\n        // This is to avoid upload error whenthe buttons are clicked to early\n        this.isButtonVisible = false;\n        // To avoid CORS preflight error: \"credentials flag is true but access-control-allow-credentials is not true\"\n        fileItem.withCredentials = false; \n        // Generate signed URL to be used for the models\n        this.signedurlService.getSignedURL(this.user.username, fileName)\n          .subscribe(\n            data => {\n              fileItem.url = data.signedURL;\n              if (fileName.includes('.gltf')) {\n                fileItem.headers = [{ name: 'Content-Type', value: 'model/gltf+json'}];\n              } else {\n                fileItem.headers = [{ name: 'Content-Type', value: 'model/gltf-binary'}];\n              }\n              this.isButtonVisible = true;\n              return {fileItem};\n          }\n        );\n      } else {\n        // Remove the file item from the queue so that it cannot be uploaded\n        fileItem.remove();\n        // Display an error message on the screen\n        this.alertService.error('Only .gltf or .glb files can be uploaded!');\n        return;\n      }\n    };\n\n    this.hasBaseDropZoneOver = false;\n\n    this.uploader.onSuccessItem = (fileItem) => {\n      // Remove previous message\n      this.alertService.clear();\n      this.alertService.success('Upload successful');\n    };\n\n    this.uploader.onErrorItem = (fileItem) => {\n      // Remove previous message\n      this.alertService.clear();\n      this.alertService.error('Upload failed!');\n    };\n\n    /*\n    this.uploader.response.subscribe( \n      res => {  \n        if (res.status === 200) {\n          this.alertService.success('Model(s) uploaded successfully');\n        }\n      });\n    */\n  }\n\n  public fileOverBase(e:any):void {\n    this.hasBaseDropZoneOver = e;\n  }\n}\n\n    \n\n    \n        ﻿\n    .my-drop-zone { border: dotted 3px lightgray; }\n    .nv-file-over { border: dotted 3px rgb(45, 42, 184); } /* Default class applied to drop zones on over */\n\n    .my-drop-zone-text { color: lightgray; }\n    .nv-file-over-text { color: rgb(45, 42, 184); } /* Default class applied to drop zones on over */\n\n    html, body { height: 100%; }\n\n\n\n\n    \n        \n            Hi {{user.username}}! Upload Your CAD Models Here -->\n        \n    \n\n    \n\n        \n\n            Select files\n\n        \n            \n                Drop Zone\n            \n\n            \n            \n        \n\n        \n\n            Upload queue\n            Queue length: {{ uploader?.queue?.length }}\n\n            \n                \n                \n                    Name\n                    Size\n                    Progress\n                    Status-->\n                    Actions\n                \n                \n                \n                \n                    {{ item?.file?.name }}\n                    {{ item?.file?.size/1024/1024 | number:'.2' }} MB\n                    \n                        \n                            \n                        \n                    \n                    \n                        \n                        \n                        \n                    \n                    -->\n                    \n                        \n                             Upload\n                        \n                        \n                             Cancel\n                        \n                        \n                             Remove\n                        \n                    \n                \n                \n            \n\n            \n                \n                    Queue progress:\n                    \n                        \n                    \n                \n                \n                     Upload all\n                \n                \n                     Cancel all\n                \n                \n                     Remove all\n                \n            \n\n        \n\n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '﻿    .my-drop-zone { border: dotted 3px lightgray; }    .nv-file-over { border: dotted 3px rgb(45, 42, 184); } /* Default class applied to drop zones on over */    .my-drop-zone-text { color: lightgray; }    .nv-file-over-text { color: rgb(45, 42, 184); } /* Default class applied to drop zones on over */    html, body { height: 100%; }                        Hi {{user.username}}! Upload Your CAD Models Here -->                                    Select files                                    Drop Zone                                                                Upload queue            Queue length: {{ uploader?.queue?.length }}                                                                Name                    Size                    Progress                    Status-->                    Actions                                                                                    {{ item?.file?.name }}                    {{ item?.file?.size/1024/1024 | number:\\'.2\\' }} MB                                                                                                                                                                                                                                                        -->                                                                         Upload                                                                             Cancel                                                                             Remove                                                                                                                                        Queue progress:                                                                                                                     Upload all                                                     Cancel all                                                     Remove all                                            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'alert'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'LayoutComponent', 'selector': ''},{'name': 'LoginComponent', 'selector': ''},{'name': 'PasswordStrengthBarComponent', 'selector': 'password-strength-bar'},{'name': 'RegisterComponent', 'selector': ''},{'name': 'UploadComponent', 'selector': 'upload.component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/user.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    username: string;\n    token: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_components/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/_components/password-strength-bar.component.ts\n            \n            component\n            PasswordStrengthBarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_helpers/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/basic.interceptor.ts\n            \n            interceptor\n            BasicInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/alert.ts\n            \n            class\n            Alert\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/_models/signedurl.ts\n            \n            class\n            SignedURL\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/_services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/_services/signedurl.service.ts\n            \n            injectable\n            SignedURLService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/account/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/account/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/account/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            accountModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/upload/upload.component.ts\n            \n            component\n            UploadComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.1\n        \n            @angular/common : ~9.1.1\n        \n            @angular/compiler : ~9.1.1\n        \n            @angular/core : ~9.1.1\n        \n            @angular/forms : ~9.1.1\n        \n            @angular/platform-browser : ~9.1.1\n        \n            @angular/platform-browser-dynamic : ~9.1.1\n        \n            @angular/router : ~9.1.1\n        \n            font-awesome : ^4.7.0\n        \n            i : ^0.3.6\n        \n            ng2-file-upload : ^1.4.0\n        \n            rxjs : ~6.5.4\n        \n            ts-md5 : ^1.2.7\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlertType   (src/.../alert.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_models/alert.ts\n    \n        \n            \n                \n                    \n                        \n                        AlertType\n                    \n                \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProvrWebsite\n\n\n\n❗️ Notice\nIn local development the application must listen on port 4200. If not, the CORS policy on Google Cloud Storage for the bucket used must be updated.\n🚀 Deployment\nThis Angular webiste is deployed to App Engine and is available here 👉 ProVR Website\nIt is automatically deployed each time a push is made to the master branch. We use Google Cloud Build to make this possible, which is a CI/CD service on GCP. The app.yaml and cloudbuild.yaml files are used to configure this deployment.\n🚨 CORS policy\nWhen browsers comminicate with external servers they send a CORS preflight request in advance of the actual POST, GET or DELETE, etc. request. This policy needs to be configured explicitly on the bucket user-cad-models in Google Cloud Storage. This is the tutorial we used 👉 CORS Config GCS. \n\nThe JSON file used to configure the CORS policy is found in this repository under the name cors-config.json.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 ProVR-Norway\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nLayoutComponent->AccountModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAccountModule -->\n\nLoginComponent->AccountModule\n\n\n\n\n\nPasswordStrengthBarComponent\n\nPasswordStrengthBarComponent\n\nAccountModule -->\n\nPasswordStrengthBarComponent->AccountModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAccountModule -->\n\nRegisterComponent->AccountModule\n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nAppModule -->\n\nUploadComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAccountService\n\nAccountService\n\nAppModule -->\n\nAccountService->AppModule\n\n\n\n\n\nBasicInterceptor\n\nBasicInterceptor\n\nAppModule -->\n\nBasicInterceptor->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nSignedURLService\n\nSignedURLService\n\nAppModule -->\n\nSignedURLService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            accountModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            accountModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => import('./account/account.module').then(x => x.AccountModule)\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: false,\n    apiUrl: 'https://api-gateway-iu3tuzfidq-ez.a.run.app'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    apiUrl: 'https://api-gateway-iu3tuzfidq-ez.a.run.app'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
